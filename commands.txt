php artisan config:cache
php artisan route:cache
php artisan self-diagnosis

/*Cache clear*/
php artisan cache:clear
php artisan config:clear

// Application requirements & log files check
php artisan log-viewer:check

// Clear all generated log files
php artisan log-viewer:clear


composer dump-autoload

php /path-to-akaunting/artisan schedule:run >> /dev/null 2>&1




Laravel Framework 5.4.36

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display this help message
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi            Force ANSI output
      --no-ansi         Disable ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled              Remove the compiled class file
  down                        Put the application into maintenance mode
  env                         Display the current framework environment
  help                        Displays help for a command
  inspire                     Display an inspiring quote
  install                     Allows to install Inventory directly through CLI
  list                        Lists commands
  migrate                     Run the database migrations
  optimize                    Optimize the framework for better performance
  self-diagnosis              Perform application self diagnosis.
  serve                       Serve the application on the PHP development server
  tinker                      Interact with your application
  up                          Bring the application out of maintenance mode
 api
  api:cache                   Create a route cache file for faster route registration
  api:docs                    Generate API documentation from annotated controllers
  api:routes                  List all registered API routes
 app
  app:name                    Set the application namespace
 auth
  auth:clear-resets           Flush expired password reset tokens
 cache
  cache:clear                 Flush the application cache
  cache:forget                Remove an item from the cache
  cache:table                 Create a migration for the cache database table
 company
  company:seed                Seed for specific company
 config
  config:cache                Create a cache file for faster configuration loading
  config:clear                Remove the configuration cache file
 db
  db:seed                     Seed the database with records
 event
  event:generate              Generate the missing events and listeners based on registration
 key
  key:generate                Set the application key
 laratrust
  laratrust:add-trait         Add LaratrustUserTrait to App\Models\Auth\User class
  laratrust:migration         Creates a migration following the Laratrust specifications.
  laratrust:permission        Create Permission model if it does not exist
  laratrust:role              Create Role model if it does not exist
  laratrust:seeder            Creates the seeder following the Laratrust specifications.
  laratrust:setup             Setup migration and models for Laratrust
  laratrust:setup-teams       Setup the teams feature in case it is not used
  laratrust:team              Create Team model if it does not exist
  laratrust:upgrade           Creates a migration to upgrade laratrust from version 3.2 to 4.0.
 log-viewer
  log-viewer:check            Check all LogViewer requirements.
  log-viewer:publish          Publish all LogViewer resources and config files
  log-viewer:stats            Display stats of all logs.
 make
  make:auth                   Scaffold basic login and registration views and routes
  make:command                Create a new Artisan command
  make:controller             Create a new controller class
  make:event                  Create a new event class
  make:job                    Create a new job class
  make:listener               Create a new event listener class
  make:mail                   Create a new email class
  make:middleware             Create a new middleware class
  make:migration              Create a new migration file
  make:model                  Create a new Eloquent model class
  make:notification           Create a new notification class
  make:policy                 Create a new policy class
  make:provider               Create a new service provider class
  make:request                Create a new form request class
  make:seeder                 Create a new seeder class
  make:test                   Create a new test class
 media
  media:import                Create a media entity for each file on a disk
  media:prune                 Delete media records that do not correspond to a file on disk
  media:sync                  Synchronize media records with the filesystem.
 migrate
  migrate:install             Create the migration repository
  migrate:refresh             Reset and re-run all migrations
  migrate:reset               Rollback all database migrations
  migrate:rollback            Rollback the last database migration
  migrate:status              Show the status of each migration
 model
  model:filter                Create A New Eloquent Model Filter
 module
  module:delete               Delete the specified module.
  module:disable              Disable the specified module.
  module:dump                 Dump-autoload the specified module or for all module.
  module:enable               Enable the specified module.
  module:install              Install the specified module.
  module:list                 Show list of all modules.
  module:make                 Generate new module.
  module:make-command         Generate new Artisan command for the specified module.
  module:make-controller      Generate new restful controller for the specified module.
  module:make-event           Generate a new Event Class for the specified module
  module:make-job             Generate a new Job Class for the specified module
  module:make-listener        Generate a new Listener Class for the specified module
  module:make-mail            Generate a new Mailable Class for the specified module
  module:make-middleware      Generate new middleware class for the specified module.
  module:make-migration       Generate a new migration for the specified module.
  module:make-model           Generate new model for the specified module.
  module:make-notification    Generate new notification class for the specified module.
  module:make-provider        Generate a new service provider for the specified module.
  module:make-request         Generate new form request class for the specified module.
  module:make-seed            Generate new seeder for the specified module.
  module:migrate              Migrate the migrations from the specified module or from all modules.
  module:migrate-refresh      Rollback & re-migrate the modules migrations.
  module:migrate-reset        Reset the modules migrations.
  module:migrate-rollback     Rollback the modules migrations.
  module:publish              Publish a module's assets to the application
  module:publish-config       Publish a module's config files to the application
  module:publish-migration    Publish a module's migrations to the application
  module:publish-translation  Publish a module's translations to the application
  module:route-provider       Generate a new route service provider for the specified module.
  module:seed                 Run database seeder from the specified module or from all modules.
  module:setup                Setting up modules folders for first use.
  module:update               Update dependencies for the specified module or for all modules.
  module:use                  Use the specified module.
 notifications
  notifications:table         Create a migration for the notifications table
 queue
  queue:failed                List all of the failed queue jobs
  queue:failed-table          Create a migration for the failed queue jobs database table
  queue:flush                 Flush all of the failed queue jobs
  queue:forget                Delete a failed queue job
  queue:listen                Listen to a given queue
  queue:restart               Restart queue worker daemons after their current job
  queue:retry                 Retry a failed queue job
  queue:table                 Create a migration for the queue jobs database table
  queue:work                  Start processing jobs on the queue as a daemon
 recurring
  recurring:check             Check for recurring
 reminder
  reminder:bill               Send reminders for bills
  reminder:invoice            Send reminders for invoices
 route
  route:cache                 Create a route cache file for faster route registration
  route:clear                 Remove the route cache file
  route:list                  List all registered routes
 schedule
  schedule:run                Run the scheduled commands
 session
  session:table               Create a migration for the session database table
 storage
  storage:link                Create a symbolic link from "public/storage" to "storage/app/public"
 vendor
  vendor:publish              Publish any publishable assets from vendor packages
 view
  view:clear                  Clear all compiled view files
